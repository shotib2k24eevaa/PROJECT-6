ListComponent.jsx

jsx
import React from 'react';

function ListComponent({ items, renderItem, loading, error }) {
  if (loading) {
    return <p>Loading...</p>;
  }

  if (error) {
    return <p>Error: {error}</p>;
  }

  if (!items || items.length === 0) {
    return <p>No items found.</p>;
  }

  return (
    <ul>
      {items.map((item, index) => (
        <li key={index}>
          {renderItem ? renderItem(item) : <div>{JSON.stringify(item)}</div>}
        </li>
      ))}
    </ul>
  );
}

export default ListComponent;


App.jsx

jsx
import React, { useState, useEffect } from 'react';
import ListComponent from './ListComponent';

function App() {
  const [data, setData] = useState([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);
  const [searchTerm, setSearchTerm] = useState('');

  useEffect(() => {
    const fetchData = async () => {
      try {
        const response = await fetch('https://jsonplaceholder.typicode.com/posts');
        const json = await response.json();
        setData(json);
      } catch (error) {
        setError(error.message);
      } finally {
        setLoading(false);
      }
    };
    fetchData();
  }, []);

  const renderItem = (item) => (
    <div>
      <h2>{item.title}</h2>
      <p>{item.body}</p>
    </div>
  );

  const filteredData = data.filter((item) => {
    return item.title.toLowerCase().includes(searchTerm.toLowerCase());
  });

  return (
    <div>
      <h1>List of Posts</h1>
      <input
        type="search"
        value={searchTerm}
        onChange={(e) => setSearchTerm(e.target.value)}
        placeholder="Search posts..."
      />
      <ListComponent items={filteredData} renderItem={renderItem} loading={loading} error={error} />
    </div>
  );
}
